#!/usr/bin/env bash

SCRIPT_NAME="ngxensite"
INSTALL_PATH="/usr/share/bin/$SCRIPT_NAME"

if [ $EUID -ne 0 ]; then
    echo "You must be root: \"sudo $SCRIPT_NAME\""
    exit 1
fi

install_script() {
    if [ ! -f "$INSTALL_PATH" ]; then
        echo "Installing $SCRIPT_NAME to $INSTALL_PATH..."
        curl -s https://raw.githubusercontent.com/mnofresno/git-status-checker/master/bin/ngx/ngxensite -o $INSTALL_PATH
        chmod +x $INSTALL_PATH
        echo "Installation complete."
    else
        echo "$SCRIPT_NAME is already installed in $INSTALL_PATH."
    fi
}

generate_autocomplete() {
    cat <<EOF >/etc/bash_completion.d/$SCRIPT_NAME
_ngen_autocomplete() {
    local cur=\${COMP_WORDS[COMP_CWORD]}
    COMPREPLY=(\$(compgen -W "\$(ls /etc/nginx/sites-available)" -- \${cur}))
    return 0
}
complete -F _ngen_autocomplete $SCRIPT_NAME
EOF
    echo "Autocomplete script for $SCRIPT_NAME has been generated and installed."
    source /etc/bash_completion.d/$SCRIPT_NAME
}

detect_run_mode() {
    if [ -t 0 ]; then
        echo "Running manually..."
        if [ "$1" == "--install" ]; then
            install_script
            generate_autocomplete
            echo "Installation and autocompletion setup complete. You can now use $SCRIPT_NAME with autocompletion."
            exit 0
        fi
    else
        # Script is being piped (via curl)
        echo "Running via curl... Installing $SCRIPT_NAME."
        install_script
        generate_autocomplete
        exit 0
    fi
}

detect_run_mode "$1"

if [ -z "$1" ]; then
    echo "Please choose a site."
    exit 1
else
    echo "Enabling site $1..."
    if [ -h "/etc/nginx/sites-enabled/$1" ] || [ -f "/etc/nginx/sites-enabled/$1" ]; then
        echo "$1 is already enabled."
        exit 1
    else
        if [ ! -f "/etc/nginx/sites-available/$1" ]; then
            echo "Site $1 does not exist in /etc/nginx/sites-available."
            exit 1
        else
            ln -s /etc/nginx/sites-available/$1 /etc/nginx/sites-enabled/$1
            echo "Enabled $1"
            exit 0
        fi
    fi
fi

echo "Reloading NGINX config..."
service nginx reload
echo "NGINX config reloaded!"